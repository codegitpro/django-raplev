# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import api_pb2 as api__pb2


class VersionServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Version = channel.unary_unary(
        '/walletrpc.VersionService/Version',
        request_serializer=api__pb2.VersionRequest.SerializeToString,
        response_deserializer=api__pb2.VersionResponse.FromString,
        )


class VersionServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Version(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_VersionServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Version': grpc.unary_unary_rpc_method_handler(
          servicer.Version,
          request_deserializer=api__pb2.VersionRequest.FromString,
          response_serializer=api__pb2.VersionResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'walletrpc.VersionService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class WalletServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Ping = channel.unary_unary(
        '/walletrpc.WalletService/Ping',
        request_serializer=api__pb2.PingRequest.SerializeToString,
        response_deserializer=api__pb2.PingResponse.FromString,
        )
    self.Network = channel.unary_unary(
        '/walletrpc.WalletService/Network',
        request_serializer=api__pb2.NetworkRequest.SerializeToString,
        response_deserializer=api__pb2.NetworkResponse.FromString,
        )
    self.AccountNumber = channel.unary_unary(
        '/walletrpc.WalletService/AccountNumber',
        request_serializer=api__pb2.AccountNumberRequest.SerializeToString,
        response_deserializer=api__pb2.AccountNumberResponse.FromString,
        )
    self.Accounts = channel.unary_unary(
        '/walletrpc.WalletService/Accounts',
        request_serializer=api__pb2.AccountsRequest.SerializeToString,
        response_deserializer=api__pb2.AccountsResponse.FromString,
        )
    self.Balance = channel.unary_unary(
        '/walletrpc.WalletService/Balance',
        request_serializer=api__pb2.BalanceRequest.SerializeToString,
        response_deserializer=api__pb2.BalanceResponse.FromString,
        )
    self.GetTransactions = channel.unary_unary(
        '/walletrpc.WalletService/GetTransactions',
        request_serializer=api__pb2.GetTransactionsRequest.SerializeToString,
        response_deserializer=api__pb2.GetTransactionsResponse.FromString,
        )
    self.TransactionNotifications = channel.unary_stream(
        '/walletrpc.WalletService/TransactionNotifications',
        request_serializer=api__pb2.TransactionNotificationsRequest.SerializeToString,
        response_deserializer=api__pb2.TransactionNotificationsResponse.FromString,
        )
    self.SpentnessNotifications = channel.unary_stream(
        '/walletrpc.WalletService/SpentnessNotifications',
        request_serializer=api__pb2.SpentnessNotificationsRequest.SerializeToString,
        response_deserializer=api__pb2.SpentnessNotificationsResponse.FromString,
        )
    self.AccountNotifications = channel.unary_stream(
        '/walletrpc.WalletService/AccountNotifications',
        request_serializer=api__pb2.AccountNotificationsRequest.SerializeToString,
        response_deserializer=api__pb2.AccountNotificationsResponse.FromString,
        )
    self.ChangePassphrase = channel.unary_unary(
        '/walletrpc.WalletService/ChangePassphrase',
        request_serializer=api__pb2.ChangePassphraseRequest.SerializeToString,
        response_deserializer=api__pb2.ChangePassphraseResponse.FromString,
        )
    self.RenameAccount = channel.unary_unary(
        '/walletrpc.WalletService/RenameAccount',
        request_serializer=api__pb2.RenameAccountRequest.SerializeToString,
        response_deserializer=api__pb2.RenameAccountResponse.FromString,
        )
    self.NextAccount = channel.unary_unary(
        '/walletrpc.WalletService/NextAccount',
        request_serializer=api__pb2.NextAccountRequest.SerializeToString,
        response_deserializer=api__pb2.NextAccountResponse.FromString,
        )
    self.NextAddress = channel.unary_unary(
        '/walletrpc.WalletService/NextAddress',
        request_serializer=api__pb2.NextAddressRequest.SerializeToString,
        response_deserializer=api__pb2.NextAddressResponse.FromString,
        )
    self.ImportPrivateKey = channel.unary_unary(
        '/walletrpc.WalletService/ImportPrivateKey',
        request_serializer=api__pb2.ImportPrivateKeyRequest.SerializeToString,
        response_deserializer=api__pb2.ImportPrivateKeyResponse.FromString,
        )
    self.FundTransaction = channel.unary_unary(
        '/walletrpc.WalletService/FundTransaction',
        request_serializer=api__pb2.FundTransactionRequest.SerializeToString,
        response_deserializer=api__pb2.FundTransactionResponse.FromString,
        )
    self.SignTransaction = channel.unary_unary(
        '/walletrpc.WalletService/SignTransaction',
        request_serializer=api__pb2.SignTransactionRequest.SerializeToString,
        response_deserializer=api__pb2.SignTransactionResponse.FromString,
        )
    self.PublishTransaction = channel.unary_unary(
        '/walletrpc.WalletService/PublishTransaction',
        request_serializer=api__pb2.PublishTransactionRequest.SerializeToString,
        response_deserializer=api__pb2.PublishTransactionResponse.FromString,
        )


class WalletServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Ping(self, request, context):
    """Queries
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Network(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AccountNumber(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Accounts(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Balance(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetTransactions(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def TransactionNotifications(self, request, context):
    """Notifications
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SpentnessNotifications(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AccountNotifications(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ChangePassphrase(self, request, context):
    """Control
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RenameAccount(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def NextAccount(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def NextAddress(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ImportPrivateKey(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FundTransaction(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SignTransaction(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PublishTransaction(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_WalletServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Ping': grpc.unary_unary_rpc_method_handler(
          servicer.Ping,
          request_deserializer=api__pb2.PingRequest.FromString,
          response_serializer=api__pb2.PingResponse.SerializeToString,
      ),
      'Network': grpc.unary_unary_rpc_method_handler(
          servicer.Network,
          request_deserializer=api__pb2.NetworkRequest.FromString,
          response_serializer=api__pb2.NetworkResponse.SerializeToString,
      ),
      'AccountNumber': grpc.unary_unary_rpc_method_handler(
          servicer.AccountNumber,
          request_deserializer=api__pb2.AccountNumberRequest.FromString,
          response_serializer=api__pb2.AccountNumberResponse.SerializeToString,
      ),
      'Accounts': grpc.unary_unary_rpc_method_handler(
          servicer.Accounts,
          request_deserializer=api__pb2.AccountsRequest.FromString,
          response_serializer=api__pb2.AccountsResponse.SerializeToString,
      ),
      'Balance': grpc.unary_unary_rpc_method_handler(
          servicer.Balance,
          request_deserializer=api__pb2.BalanceRequest.FromString,
          response_serializer=api__pb2.BalanceResponse.SerializeToString,
      ),
      'GetTransactions': grpc.unary_unary_rpc_method_handler(
          servicer.GetTransactions,
          request_deserializer=api__pb2.GetTransactionsRequest.FromString,
          response_serializer=api__pb2.GetTransactionsResponse.SerializeToString,
      ),
      'TransactionNotifications': grpc.unary_stream_rpc_method_handler(
          servicer.TransactionNotifications,
          request_deserializer=api__pb2.TransactionNotificationsRequest.FromString,
          response_serializer=api__pb2.TransactionNotificationsResponse.SerializeToString,
      ),
      'SpentnessNotifications': grpc.unary_stream_rpc_method_handler(
          servicer.SpentnessNotifications,
          request_deserializer=api__pb2.SpentnessNotificationsRequest.FromString,
          response_serializer=api__pb2.SpentnessNotificationsResponse.SerializeToString,
      ),
      'AccountNotifications': grpc.unary_stream_rpc_method_handler(
          servicer.AccountNotifications,
          request_deserializer=api__pb2.AccountNotificationsRequest.FromString,
          response_serializer=api__pb2.AccountNotificationsResponse.SerializeToString,
      ),
      'ChangePassphrase': grpc.unary_unary_rpc_method_handler(
          servicer.ChangePassphrase,
          request_deserializer=api__pb2.ChangePassphraseRequest.FromString,
          response_serializer=api__pb2.ChangePassphraseResponse.SerializeToString,
      ),
      'RenameAccount': grpc.unary_unary_rpc_method_handler(
          servicer.RenameAccount,
          request_deserializer=api__pb2.RenameAccountRequest.FromString,
          response_serializer=api__pb2.RenameAccountResponse.SerializeToString,
      ),
      'NextAccount': grpc.unary_unary_rpc_method_handler(
          servicer.NextAccount,
          request_deserializer=api__pb2.NextAccountRequest.FromString,
          response_serializer=api__pb2.NextAccountResponse.SerializeToString,
      ),
      'NextAddress': grpc.unary_unary_rpc_method_handler(
          servicer.NextAddress,
          request_deserializer=api__pb2.NextAddressRequest.FromString,
          response_serializer=api__pb2.NextAddressResponse.SerializeToString,
      ),
      'ImportPrivateKey': grpc.unary_unary_rpc_method_handler(
          servicer.ImportPrivateKey,
          request_deserializer=api__pb2.ImportPrivateKeyRequest.FromString,
          response_serializer=api__pb2.ImportPrivateKeyResponse.SerializeToString,
      ),
      'FundTransaction': grpc.unary_unary_rpc_method_handler(
          servicer.FundTransaction,
          request_deserializer=api__pb2.FundTransactionRequest.FromString,
          response_serializer=api__pb2.FundTransactionResponse.SerializeToString,
      ),
      'SignTransaction': grpc.unary_unary_rpc_method_handler(
          servicer.SignTransaction,
          request_deserializer=api__pb2.SignTransactionRequest.FromString,
          response_serializer=api__pb2.SignTransactionResponse.SerializeToString,
      ),
      'PublishTransaction': grpc.unary_unary_rpc_method_handler(
          servicer.PublishTransaction,
          request_deserializer=api__pb2.PublishTransactionRequest.FromString,
          response_serializer=api__pb2.PublishTransactionResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'walletrpc.WalletService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class WalletLoaderServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.WalletExists = channel.unary_unary(
        '/walletrpc.WalletLoaderService/WalletExists',
        request_serializer=api__pb2.WalletExistsRequest.SerializeToString,
        response_deserializer=api__pb2.WalletExistsResponse.FromString,
        )
    self.CreateWallet = channel.unary_unary(
        '/walletrpc.WalletLoaderService/CreateWallet',
        request_serializer=api__pb2.CreateWalletRequest.SerializeToString,
        response_deserializer=api__pb2.CreateWalletResponse.FromString,
        )
    self.OpenWallet = channel.unary_unary(
        '/walletrpc.WalletLoaderService/OpenWallet',
        request_serializer=api__pb2.OpenWalletRequest.SerializeToString,
        response_deserializer=api__pb2.OpenWalletResponse.FromString,
        )
    self.CloseWallet = channel.unary_unary(
        '/walletrpc.WalletLoaderService/CloseWallet',
        request_serializer=api__pb2.CloseWalletRequest.SerializeToString,
        response_deserializer=api__pb2.CloseWalletResponse.FromString,
        )
    self.StartConsensusRpc = channel.unary_unary(
        '/walletrpc.WalletLoaderService/StartConsensusRpc',
        request_serializer=api__pb2.StartConsensusRpcRequest.SerializeToString,
        response_deserializer=api__pb2.StartConsensusRpcResponse.FromString,
        )


class WalletLoaderServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def WalletExists(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateWallet(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def OpenWallet(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CloseWallet(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StartConsensusRpc(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_WalletLoaderServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'WalletExists': grpc.unary_unary_rpc_method_handler(
          servicer.WalletExists,
          request_deserializer=api__pb2.WalletExistsRequest.FromString,
          response_serializer=api__pb2.WalletExistsResponse.SerializeToString,
      ),
      'CreateWallet': grpc.unary_unary_rpc_method_handler(
          servicer.CreateWallet,
          request_deserializer=api__pb2.CreateWalletRequest.FromString,
          response_serializer=api__pb2.CreateWalletResponse.SerializeToString,
      ),
      'OpenWallet': grpc.unary_unary_rpc_method_handler(
          servicer.OpenWallet,
          request_deserializer=api__pb2.OpenWalletRequest.FromString,
          response_serializer=api__pb2.OpenWalletResponse.SerializeToString,
      ),
      'CloseWallet': grpc.unary_unary_rpc_method_handler(
          servicer.CloseWallet,
          request_deserializer=api__pb2.CloseWalletRequest.FromString,
          response_serializer=api__pb2.CloseWalletResponse.SerializeToString,
      ),
      'StartConsensusRpc': grpc.unary_unary_rpc_method_handler(
          servicer.StartConsensusRpc,
          request_deserializer=api__pb2.StartConsensusRpcRequest.FromString,
          response_serializer=api__pb2.StartConsensusRpcResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'walletrpc.WalletLoaderService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
